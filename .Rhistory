data=spy.us ,family=binomial)
summary(logreg.fit)
# volume, lag1, and lag2 are signifant. lets see the training error rate
logreg.probs <- predict (logreg.fit,type="response")
logreg.pred <- rep('down', nrow(spy.us))
logreg.pred[logreg.probs >.5] <- 'up'
table(logreg.pred, spy.us$direction)
mean(logreg.pred == spy.us$direction)
logreg.fit <- glm(up∼lag1+lag2+lag5+volume.today:lag1,
data=spy.us ,family=binomial)
summary(logreg.fit)
# volume, lag1, and lag2 are signifant. lets see the training error rate
logreg.probs <- predict (logreg.fit,type="response")
logreg.pred <- rep('down', nrow(spy.us))
logreg.pred[logreg.probs >.5] <- 'up'
table(logreg.pred, spy.us$direction)
mean(logreg.pred == spy.us$direction)
logreg.fit <- glm(up∼lag1+lag2+lag5+volume.today:lag1+volume.lag2:volume.lag1,
data=spy.us ,family=binomial)
summary(logreg.fit)
# volume, lag1, and lag2 are signifant. lets see the training error rate
logreg.probs <- predict (logreg.fit,type="response")
logreg.pred <- rep('down', nrow(spy.us))
logreg.pred[logreg.probs >.5] <- 'up'
table(logreg.pred, spy.us$direction)
mean(logreg.pred == spy.us$direction)
logreg.fit <- glm(up∼lag1+lag2+lag5+volume:lag1,
data=spy.us ,family=binomial)
logreg.fit <- glm(up∼lag1+lag2+lag5+volume.today:lag1,
data=spy.us ,family=binomial)
summary(logreg.fit)
# volume, lag1, and lag2 are signifant. lets see the training error rate
logreg.probs <- predict (logreg.fit,type="response")
logreg.pred <- rep('down', nrow(spy.us))
logreg.pred[logreg.probs >.5] <- 'up'
table(logreg.pred, spy.us$direction)
mean(logreg.pred == spy.us$direction)
plot(logreg.pred, spy.us$direction)
plot(logreg.probs, spy.us$up)
logreg.pred <- rep(1, nrow(spy.us))
logreg.pred[logreg.probs >.5] <- 0
table(logreg.pred, spy.us$direction)
mean(logreg.pred == spy.us$up)
logreg.fit <- glm(up∼lag1+lag2+lag5+volume.today:lag1,
data=spy.us ,family=binomial)
summary(logreg.fit)
# volume, lag1, and lag2 are signifant. lets see the training error rate
logreg.probs <- predict (logreg.fit,type="response")
logreg.pred <- rep(1, nrow(spy.us))
logreg.pred[logreg.probs >.5] <- 0
table(logreg.pred, spy.us$direction)
mean(logreg.pred == spy.us$up)
logreg.fit <- glm(up∼lag1+lag2+lag5,
data=spy.us ,family=binomial)
summary(logreg.fit)
# volume, lag1, and lag2 are signifant. lets see the training error rate
logreg.probs <- predict (logreg.fit,type="response")
logreg.pred <- rep(1, nrow(spy.us))
logreg.pred[logreg.probs >.5] <- 0
table(logreg.pred, spy.us$direction)
mean(logreg.pred == spy.us$up)
logreg.fit <- glm(up∼lag1+lag2+lag5,
data=spy.us ,family=binomial)
summary(logreg.fit)
# volume, lag1, and lag2 are signifant. lets see the training error rate
logreg.probs <- predict (logreg.fit,type="response")
logreg.pred <- rep(1, nrow(spy.us))
logreg.pred[logreg.probs >.5] <- 0
table(logreg.pred, spy.us$direction)
mean(logreg.pred == spy.us$up)
plot(logreg.probs, spy.us$up)
plot(logreg.probs, spy.us$up)
plot(logreg.pred, spy.us$up)
plot(logreg.probs, spy.us$up)
logreg.fit <- glm(up∼lag1*volume.today+lag2+lag5,
data=spy.us ,family=binomial)
summary(logreg.fit)
# volume, lag1, and lag2 are signifant. lets see the training error rate
logreg.probs <- predict (logreg.fit,type="response")
logreg.pred <- rep(1, nrow(spy.us))
logreg.pred[logreg.probs >.5] <- 0
table(logreg.pred, spy.us$direction)
mean(logreg.pred == spy.us$up)
plot(logreg.probs, spy.us$up)
logreg.fit <- glm(up∼lag1*volume.today+lag2*volume.lag1+lag5,
data=spy.us ,family=binomial)
summary(logreg.fit)
# volume, lag1, and lag2 are signifant. lets see the training error rate
logreg.probs <- predict (logreg.fit,type="response")
logreg.pred <- rep(1, nrow(spy.us))
logreg.pred[logreg.probs >.5] <- 0
table(logreg.pred, spy.us$direction)
mean(logreg.pred == spy.us$up)
plot(logreg.probs, spy.us$up)
logreg.fit <- glm(up∼lag1*volume.today+lag2*volume.lag1+lag5*volume*lag4,
data=spy.us ,family=binomial)
summary(logreg.fit)
# volume, lag1, and lag2 are signifant. lets see the training error rate
logreg.probs <- predict (logreg.fit,type="response")
logreg.pred <- rep(1, nrow(spy.us))
logreg.pred[logreg.probs >.5] <- 0
table(logreg.pred, spy.us$direction)
mean(logreg.pred == spy.us$up)
plot(logreg.probs, spy.us$up)
logreg.fit <- glm(up∼lag1*volume.today+lag2*volume.lag1+lag5*volume.lag4,
data=spy.us ,family=binomial)
summary(logreg.fit)
# volume, lag1, and lag2 are signifant. lets see the training error rate
logreg.probs <- predict (logreg.fit,type="response")
logreg.pred <- rep(1, nrow(spy.us))
logreg.pred[logreg.probs >.5] <- 0
table(logreg.pred, spy.us$direction)
mean(logreg.pred == spy.us$up)
plot(logreg.probs, spy.us$up)
logreg.fit <- glm(up∼lag1*volume.today+lag2*volume.lag1+lag5,
data=spy.us ,family=binomial)
summary(logreg.fit)
# volume, lag1, and lag2 are signifant. lets see the training error rate
logreg.probs <- predict (logreg.fit,type="response")
logreg.pred <- rep(1, nrow(spy.us))
logreg.pred[logreg.probs >.5] <- 0
table(logreg.pred, spy.us$direction)
mean(logreg.pred == spy.us$up)
plot(logreg.probs, spy.us$up)
logreg.fit <- glm(up∼lag1*volume.today+lag2*volume.lag1*volume.today+lag5,
data=spy.us ,family=binomial)
summary(logreg.fit)
# volume, lag1, and lag2 are signifant. lets see the training error rate
logreg.probs <- predict (logreg.fit,type="response")
logreg.pred <- rep(1, nrow(spy.us))
logreg.pred[logreg.probs >.5] <- 0
table(logreg.pred, spy.us$direction)
mean(logreg.pred == spy.us$up)
logreg.fit <- glm(up∼lag1*volume.today+lag2*volume.lag1*volume.today*lag1+lag5,
data=spy.us ,family=binomial)
summary(logreg.fit)
# volume, lag1, and lag2 are signifant. lets see the training error rate
logreg.probs <- predict (logreg.fit,type="response")
logreg.pred <- rep(1, nrow(spy.us))
logreg.pred[logreg.probs >.5] <- 0
table(logreg.pred, spy.us$direction)
mean(logreg.pred == spy.us$up)
plot(logreg.probs, spy.us$up)
logreg.fit <- glm(up∼lag1*volume.today+lag2*volume.lag1+lag5,
data=spy.us ,family=binomial)
summary(logreg.fit)
# volume, lag1, and lag2 are signifant. lets see the training error rate
logreg.probs <- predict (logreg.fit,type="response")
logreg.pred <- rep(1, nrow(spy.us))
logreg.pred[logreg.probs >.5] <- 0
table(logreg.pred, spy.us$direction)
mean(logreg.pred == spy.us$up)
plot(logreg.probs, spy.us$up)
logreg.fit <- glm(up∼lag1*volume.today+lag2*volume.lag1+lag5*volume.lag4,
data=spy.us ,family=binomial)
summary(logreg.fit)
# volume, lag1, and lag2 are signifant. lets see the training error rate
logreg.probs <- predict (logreg.fit,type="response")
logreg.pred <- rep(1, nrow(spy.us))
logreg.pred[logreg.probs >.5] <- 0
table(logreg.pred, spy.us$direction)
mean(logreg.pred == spy.us$up)
plot(logreg.probs, spy.us$up)
logreg.fit <- glm(up∼lag1*volume.today+lag2*volume.lag1+lag5*volume.lag4,
data=spy.us ,family=binomial)
cost <- function(r, pi = 0) mean(abs(r-pi) > 0.5)
cv.error <- cv.glm(spy.us,logreg.fit, cost, K=5)$delta[1]
summary(logreg.fit)
cv.error
logreg.fit <- glm(up∼lag1*volume.today+lag2*volume.lag1+lag5,
data=spy.us ,family=binomial)
cost <- function(r, pi = 0) mean(abs(r-pi) > 0.5)
cv.error <- cv.glm(spy.us,logreg.fit, cost, K=5)$delta[1]
summary(logreg.fit)
# lets try lda with 10-fold cross validation
spy_shuffled <- spy.us[sample(nrow(spy.us)),]
cv.error
logreg.fit <- glm(up∼lag1*volume.today+lag2*volume.lag1+lag5*volume.lag4+lag4*volume.lag3,
data=spy.us ,family=binomial)
cost <- function(r, pi = 0) mean(abs(r-pi) > 0.5)
cv.error <- cv.glm(spy.us,logreg.fit, cost, K=5)$delta[1]
summary(logreg.fit)
cv.error <- cv.glm(spy.us,logreg.fit, cost, K=5)$delta[1]
cv.error
# create a scatterplot matrix
ggscatmat(spy.us, color = "direction")
ggplot(spy.us, aes(today, Volume)) +
geom_point() +
geom_smooth(se = FALSE)
# create a scatterplot matrix
ggscatmat(spy.us, color = "direction")
# create a matrix corresponding to the predictors and outcomes
x=model.matrix(direction~.+lag1:volume.today+lag2:volume.lag1,spy.us)[,2:13]
View(x)
# create a matrix corresponding to the predictors and outcomes
x=model.matrix(direction~.+lag1:volume.today+lag2:volume.lag1,spy.us)
c(2:13)
c(2:13, 16, 17)
# create a matrix corresponding to the predictors and outcomes
x=model.matrix(direction~.+lag1:volume.today+lag2:volume.lag1,spy.us)[,c(2:13, 16, 17)]
y=spy.us$up
# set up test and train datasets
set.seed(1)
train=sample (1: nrow(x), nrow(x)/2)
test=(-train)
y.test=y[test]
# implement lasso over the range of values lambda = 10**10 to lambda = 10**2
grid=10^seq(10,-2, length =100)
lasso.mod=glmnet(x[train ,],y[ train],alpha=1, family=binomial, lambda =grid)
# use cross validation to determine whether lasso can outperform least squares
cv.out=cv.glmnet(x[train ,],y[ train],alpha=1, family=binomial)
par(mar=c(1,1,1,1))
plt = plot(cv.out)
bestlam =cv.out$lambda.min
lasso.prob=predict(lasso.mod ,s=bestlam ,newx=x[test ,])
lasso.pred=rep(1, nrow(lasso.prob))
lasso.pred[lasso.prob < 0.5]=0
mean(lasso.pred != y.test)
table(lasso.pred, y.test)
out=glmnet (x,y,alpha=1, lambda=grid)
lasso.coef=predict (out, type='coefficients', s=bestlam) [1:13,]
lasso.coef
lasso.coef[lasso.coef=0]
lasso.coef[lasso.coef!=0]
logreg.fit <- glm(up∼lag2,
data=spy.us ,family=binomial)
cost <- function(r, pi = 0) mean(abs(r-pi) > 0.5)
cv.error <- cv.glm(spy.us,logreg.fit, cost, K=5)$delta[1]
cv.error
logreg.fit <- glm(up∼lag1+lag2,
data=spy.us ,family=binomial)
cost <- function(r, pi = 0) mean(abs(r-pi) > 0.5)
cv.error <- cv.glm(spy.us,logreg.fit, cost, K=5)$delta[1]
cv.error
# create a matrix corresponding to the predictors and outcomes
x=model.matrix(direction~.+lag1*volume.today*lag2*volume.lag1,spy.us)[,c(2:13, 16, 17)]
# create a matrix corresponding to the predictors and outcomes
x=model.matrix(direction~.)[,c(2:13)]
y=spy.us$up
# set up test and train datasets
set.seed(1)
train=sample (1: nrow(x), nrow(x)/2)
test=(-train)
y.test=y[test]
# implement lasso over the range of values lambda = 10**10 to lambda = 10**2
grid=10^seq(10,-2, length =100)
lasso.mod=glmnet(x[train ,],y[ train],alpha=1, family=binomial, lambda =grid)
# use cross validation to determine whether lasso can outperform least squares
cv.out=cv.glmnet(x[train ,],y[ train],alpha=1, family=binomial)
par(mar=c(1,1,1,1))
plt = plot(cv.out)
bestlam =cv.out$lambda.min
lasso.prob=predict(lasso.mod ,s=bestlam ,newx=x[test ,])
lasso.pred=rep(1, nrow(lasso.prob))
lasso.pred[lasso.prob < 0.5]=0
mean(lasso.pred != y.test)
table(lasso.pred, y.test)
out=glmnet (x,y,alpha=1, lambda=grid)
lasso.coef=predict (out, type='coefficients', s=bestlam) [1:13,]
lasso.coef
lasso.coef[lasso.coef != 0]
logreg.fit <- glm(up∼lag1:volume.today+lag2:volume.lag1+lag5:volume.lag4+volume.today+volume.lag1,
data=spy.us ,family=binomial)
cost <- function(r, pi = 0) mean(abs(r-pi) > 0.5)
cv.error <- cv.glm(spy.us,logreg.fit, cost, K=5)$delta[1]
cv.error
logreg.fit <- glm(up∼lag1*volume.today+lag2*volume.lag1+lag5*volume.lag4,
data=spy.us ,family=binomial)
cost <- function(r, pi = 0) mean(abs(r-pi) > 0.5)
cv.error <- cv.glm(spy.us,logreg.fit, cost, K=5)$delta[1]
cv.error
logreg.fit <- glm(up∼lag1:volume.today+lag2*volume.lag1+lag5*volume.lag4,
data=spy.us ,family=binomial)
cost <- function(r, pi = 0) mean(abs(r-pi) > 0.5)
cv.error <- cv.glm(spy.us,logreg.fit, cost, K=5)$delta[1]
cv.error
logreg.fit <- glm(up∼lag1*volume.today+lag2:volume.lag1+lag5*volume.lag4,
data=spy.us ,family=binomial)
cost <- function(r, pi = 0) mean(abs(r-pi) > 0.5)
cv.error <- cv.glm(spy.us,logreg.fit, cost, K=5)$delta[1]
cv.error
logreg.fit <- glm(up∼lag1*volume.today+lag2*volume.lag1+lag5*volume.lag4,
data=spy.us ,family=binomial)
cost <- function(r, pi = 0) mean(abs(r-pi) > 0.5)
cv.error <- cv.glm(spy.us,logreg.fit, cost, K=5)$delta[1]
cv.error
logreg.fit <- glm(up∼lag1*volume.today+lag2*volume.lag1+lag5:volume.lag4,
data=spy.us ,family=binomial)
cost <- function(r, pi = 0) mean(abs(r-pi) > 0.5)
cv.error <- cv.glm(spy.us,logreg.fit, cost, K=5)$delta[1]
cv.error
summary(logreg.fit)
logreg.fit <- glm(up∼lag1*volume.today+lag2*volume.lag1+lag5*volume.lag4,
data=spy.us ,family=binomial)
cost <- function(r, pi = 0) mean(abs(r-pi) > 0.5)
cv.error <- cv.glm(spy.us,logreg.fit, cost, K=5)$delta[1]
cv.error
# create a matrix corresponding to the predictors and outcomes
x=model.matrix(direction~*)[,c(2:13)]
# create a matrix corresponding to the predictors and outcomes
x=model.matrix(direction~*.)[,c(2:13)]
# create a matrix corresponding to the predictors and outcomes
x=model.matrix(direction~.*)[,c(2:13)]
# create a matrix corresponding to the predictors and outcomes
x=model.matrix(direction~.*.)[,c(2:13)]
lasso.coef[lasso.coef != 0]
# create a matrix corresponding to the predictors and outcomes
x=model.matrix(direction~.)[,c(2:13)]
# create a matrix corresponding to the predictors and outcomes
x=model.matrix(direction~.)[,c(2:13)]
# create a matrix corresponding to the predictors and outcomes
x=model.matrix(direction~., spy.us)[,c(2:13)]
y=spy.us$up
# set up test and train datasets
set.seed(1)
train=sample (1: nrow(x), nrow(x)/2)
test=(-train)
y.test=y[test]
# implement lasso over the range of values lambda = 10**10 to lambda = 10**2
grid=10^seq(10,-2, length =100)
lasso.mod=glmnet(x[train ,],y[ train],alpha=1, family=binomial, lambda =grid)
# use cross validation to determine whether lasso can outperform least squares
cv.out=cv.glmnet(x[train ,],y[ train],alpha=1, family=binomial)
par(mar=c(1,1,1,1))
plt = plot(cv.out)
bestlam =cv.out$lambda.min
lasso.prob=predict(lasso.mod ,s=bestlam ,newx=x[test ,])
lasso.pred=rep(1, nrow(lasso.prob))
lasso.pred[lasso.prob < 0.5]=0
mean(lasso.pred != y.test)
out=glmnet (x,y,alpha=1, lambda=grid)
lasso.coef=predict (out, type='coefficients', s=bestlam) [1:13,]
lasso.coef
lasso.coef[lasso.coef != 0]
logreg.fit <- glm(up∼lag1+volume.today+l
ag2+volume.lag1+lag5+volume.lag4+volume.lag5,
data=spy.us ,family=binomial)
cost <- function(r, pi = 0) mean(abs(r-pi) > 0.5)
cv.error <- cv.glm(spy.us,logreg.fit, cost, K=5)$delta[1]
cv.error
logreg.fit <- glm(up∼lag1+volume.today+l
ag2+volume.lag1+lag5+volume.lag4,
data=spy.us ,family=binomial)
cost <- function(r, pi = 0) mean(abs(r-pi) > 0.5)
cv.error <- cv.glm(spy.us,logreg.fit, cost, K=5)$delta[1]
cv.error
logreg.fit <- glm(up∼lag1:volume.today+l
ag2+volume.lag1+lag5+volume.lag4+volume.lag5,
data=spy.us ,family=binomial)
cost <- function(r, pi = 0) mean(abs(r-pi) > 0.5)
cv.error <- cv.glm(spy.us,logreg.fit, cost, K=5)$delta[1]
cv.error
logreg.fit <- glm(up∼lag1:volume.today+l
ag2:volume.lag1+lag5+volume.lag4+volume.lag5,
data=spy.us ,family=binomial)
cost <- function(r, pi = 0) mean(abs(r-pi) > 0.5)
cv.error <- cv.glm(spy.us,logreg.fit, cost, K=5)$delta[1]
cv.error
logreg.fit <- glm(up∼lag1:volume.today+l
ag2+lag2:volume.lag1+lag5+volume.lag4+volume.lag5,
data=spy.us ,family=binomial)
cost <- function(r, pi = 0) mean(abs(r-pi) > 0.5)
cv.error <- cv.glm(spy.us,logreg.fit, cost, K=5)$delta[1]
cv.error
logreg.fit <- glm(up∼lag1:volume.today+l
ag2+volume.lag1+lag5+volume.lag4+volume.lag5,
data=spy.us ,family=binomial)
cost <- function(r, pi = 0) mean(abs(r-pi) > 0.5)
cv.error <- cv.glm(spy.us,logreg.fit, cost, K=5)$delta[1]
cv.error
logreg.fit <- glm(up∼lag1+lag1:volume.today+l
ag2+lag2:volume.lag1+lag5+volume.lag4+volume.lag5,
data=spy.us ,family=binomial)
cost <- function(r, pi = 0) mean(abs(r-pi) > 0.5)
cv.error <- cv.glm(spy.us,logreg.fit, cost, K=5)$delta[1]
cv.error
logreg.fit <- glm(up∼lag1:volume.today+l
ag2+lag2:volume.lag1+lag5+volume.lag4+volume.lag5,
data=spy.us ,family=binomial)
cost <- function(r, pi = 0) mean(abs(r-pi) > 0.5)
cv.error <- cv.glm(spy.us,logreg.fit, cost, K=5)$delta[1]
cv.error
logreg.fit <- glm(up∼lag1:volume.today+l
ag2+lag2:volume.lag1+lag5+volume.lag4+volume.lag5,
data=spy.us ,family=binomial)
cost <- function(r, pi = 0) mean(abs(r-pi) > 0.5)
cv.error <- cv.glm(spy.us,logreg.fit, cost, K=5)$delta[1]
cv.error
logreg.fit <- glm(up∼lag1:volume.today+l
ag2+lag2:volume.lag1+lag5:volume.lag4+volume.lag5,
data=spy.us ,family=binomial)
cost <- function(r, pi = 0) mean(abs(r-pi) > 0.5)
cv.error <- cv.glm(spy.us,logreg.fit, cost, K=5)$delta[1]
cv.error
logreg.fit <- glm(up∼lag1:volume.today+l
ag2+lag2:volume.lag1+lag5:volume.lag4+volume.lag5,
data=spy.us ,family=binomial)
cost <- function(r, pi = 0) mean(abs(r-pi) > 0.5)
cv.error <- cv.glm(spy.us,logreg.fit, cost, K=5)$delta[1]
cv.error
logreg.fit <- glm(up∼lag1:volume.today+l
ag2+lag2:volume.lag1+lag5+lag5:volume.lag4+volume.lag5,
data=spy.us ,family=binomial)
cost <- function(r, pi = 0) mean(abs(r-pi) > 0.5)
cv.error <- cv.glm(spy.us,logreg.fit, cost, K=5)$delta[1]
cv.error
summary(logreg.fit)
cv.error
logreg.fit <- glm(up∼lag1:volume.today+l
ag2+lag2:volume.lag1+lag5+lag5:volume.lag4,
data=spy.us ,family=binomial)
cost <- function(r, pi = 0) mean(abs(r-pi) > 0.5)
cv.error <- cv.glm(spy.us,logreg.fit, cost, K=5)$delta[1]
cv.error
logreg.fit <- glm(up∼lag1:volume.today+l
ag2+lag2:volume.lag1+lag5+lag5:volume.lag4+volume.lag5,
data=spy.us ,family=binomial)
cost <- function(r, pi = 0) mean(abs(r-pi) > 0.5)
cv.error <- cv.glm(spy.us,logreg.fit, cost, K=5)$delta[1]
cv.error
summary(logreg.fit)
cv.error
logreg.fit <- glm(up∼lag1:volume.today+l
ag2+lag2:volume.lag1+lag5:volume.lag4+volume.lag5,
data=spy.us ,family=binomial)
cost <- function(r, pi = 0) mean(abs(r-pi) > 0.5)
cv.error <- cv.glm(spy.us,logreg.fit, cost, K=5)$delta[1]
cv.error
logreg.fit <- glm(up∼lag1:volume.today+l
ag2+lag2:volume.lag1+lag5:volume.lag4+volume.lag5,
data=spy.us ,family=binomial)
cost <- function(r, pi = 0) mean(abs(r-pi) > 0.5)
cv.error <- cv.glm(spy.us,logreg.fit, cost, K=5)$delta[1]
cv.error
logreg.fit <- glm(up∼lag1:volume.today+l
ag2+lag2:volume.lag1+lag5:volume.lag4+volume.lag5,
data=spy.us ,family=binomial)
cost <- function(r, pi = 0) mean(abs(r-pi) > 0.5)
cv.error <- cv.glm(spy.us,logreg.fit, cost, K=5)$delta[1]
cv.error
logreg.fit <- glm(up∼lag1+volume.today+l
ag2+volume.lag1+lag5+volume.lag4+volume.lag5,
data=spy.us ,family=binomial)
cost <- function(r, pi = 0) mean(abs(r-pi) > 0.5)
cv.error <- cv.glm(spy.us,logreg.fit, cost, K=5)$delta[1]
cv.error
logreg.fit <- glm(up∼lag1+volume.today+l
ag2+volume.lag1+lag5+volume.lag4+volume.lag5,
data=spy.us ,family=binomial)
cost <- function(r, pi = 0) mean(abs(r-pi) > 0.5)
cv.error <- cv.glm(spy.us,logreg.fit, cost, K=5)$delta[1]
cv.error
logreg.fit <- glm(up∼lag1+volume.today+l
ag2+lag2:volume.lag1+lag5+volume.lag4+volume.lag5,
data=spy.us ,family=binomial)
cost <- function(r, pi = 0) mean(abs(r-pi) > 0.5)
cv.error <- cv.glm(spy.us,logreg.fit, cost, K=5)$delta[1]
cv.error
logreg.fit <- glm(up∼lag1+volume.today+l
ag2+volume.lag1+lag5:volume.lag4+volume.lag5,
data=spy.us ,family=binomial)
cost <- function(r, pi = 0) mean(abs(r-pi) > 0.5)
cv.error <- cv.glm(spy.us,logreg.fit, cost, K=5)$delta[1]
cv.error
logreg.fit <- glm(up∼lag1+volume.today+l
ag2+volume.lag1+lag5+volume.lag4,
data=spy.us ,family=binomial)
cost <- function(r, pi = 0) mean(abs(r-pi) > 0.5)
cv.error <- cv.glm(spy.us,logreg.fit, cost, K=5)$delta[1]
cv.error
logreg.fit <- glm(up∼lag1+volume.today+l
ag2+volume.lag1+lag5+volume.lag4,
data=spy.us ,family=binomial)
cost <- function(r, pi = 0) mean(abs(r-pi) > 0.5)
cv.error <- cv.glm(spy.us,logreg.fit, cost, K=5)$delta[1]
cv.error
logreg.fit <- glm(up∼lag1+volume.today+l
ag2+volume.lag1+lag5+volume.lag4+volume.lag5,
data=spy.us ,family=binomial)
cost <- function(r, pi = 0) mean(abs(r-pi) > 0.5)
cv.error <- cv.glm(spy.us,logreg.fit, cost, K=5)$delta[1]
cv.error
logreg.fit <- glm(up∼lag1+volume.today+lag2+volume.lag1+lag5+volume.lag4+volume.lag5,
data=spy.us ,family=binomial)
cost <- function(r, pi = 0) mean(abs(r-pi) > 0.5)
cv.error <- cv.glm(spy.us,logreg.fit, cost, K=5)$delta[1]
cv.error
logreg.fit <- glm(up∼lag1+lag2+volume.lag1+lag5+volume.lag4+volume.lag5,
data=spy.us ,family=binomial)
cost <- function(r, pi = 0) mean(abs(r-pi) > 0.5)
cv.error <- cv.glm(spy.us,logreg.fit, cost, K=5)$delta[1]
cv.error
logreg.fit <- glm(up∼lag1+volume.today+lag2+lag5+volume.lag4+volume.lag5,
data=spy.us ,family=binomial)
cost <- function(r, pi = 0) mean(abs(r-pi) > 0.5)
cv.error <- cv.glm(spy.us,logreg.fit, cost, K=5)$delta[1]
cv.error
logreg.fit <- glm(up∼lag1+volume.today+lag2+volume.lag1+lag5+volume.lag5,
data=spy.us ,family=binomial)
cost <- function(r, pi = 0) mean(abs(r-pi) > 0.5)
cv.error <- cv.glm(spy.us,logreg.fit, cost, K=5)$delta[1]
cv.error
logreg.fit <- glm(up∼lag1+volume.today+lag2+volume.lag1+volume.lag4+volume.lag5,
data=spy.us ,family=binomial)
cost <- function(r, pi = 0) mean(abs(r-pi) > 0.5)
cv.error <- cv.glm(spy.us,logreg.fit, cost, K=5)$delta[1]
cv.error
logreg.fit <- glm(up∼lag1+volume.today+lag2+volume.lag1+lag5+volume.lag4+volume.lag5,
data=spy.us ,family=binomial)
cost <- function(r, pi = 0) mean(abs(r-pi) > 0.5)
cv.error <- cv.glm(spy.us,logreg.fit, cost, K=5)$delta[1]
cv.error
